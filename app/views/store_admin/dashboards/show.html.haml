- provide(:title, 'Admin Dashboard')
.row-fluid
  .span12
    .page-header
      %h1 #{current_store.name} - Administration Portal

.row-fluid
  .tabbable
    %ul.nav.nav-tabs
      %li.active
        = link_to "Dashboard", store_admin_path
      %li
        = link_to "Past Orders", store_admin_orders_path
      %li
        = link_to "Manage Products", store_admin_products_path
      %li
        = link_to "Manage Categories", store_admin_categories_path


.row-fluid
  .span12
    %h4 Total Orders by Status
.row-fluid
  .status-panel.pull-left.span12
    .stat.span2
      %h1#pending.text-center
        - pending = []
        - @orders.each do |order|
          - if order.current_status == "pending"
            - pending << order
        = pending.count
      %p.text-center
        = link_to "Pending", store_admin_path(status: "pending")
    .stat.span2.pull-left
      %h1#shipped.text-center
        - shipped = []
        - @orders.each do |order|
          - if order.current_status == "shipped"
            - shipped << order
        = shipped.count
      %p.text-center
        = link_to "Shipped", store_admin_path(status: "shipped")
    .stat.span3.pull-left
      %h1#paid.text-center
        - paid = []
        - @orders.each do |order|
          - if order.current_status == "paid"
            - paid << order
        = paid.count
      %p.text-center
        = link_to "Paid", store_admin_path(status: "paid")
    .stat.span2.pull-left
      %h1#cancelled.text-center
        - cancelled = []
        - @orders.each do |order|
          - if order.current_status == "cancelled"
            - cancelled << order
        = cancelled.count
      %p.text-center
        = link_to "Cancelled", store_admin_path(status: "cancelled")
    .stat.span2.pull-left
      %h1#returned.text-center
        - returned = []
        - @orders.each do |order|
          - if order.current_status == "returned"
            - returned << order
        = returned.count
      %p.text-center
        = link_to "Returned", store_admin_path(status: "returned")
%br/
.row-fluid
  .span12
    %table.table.table-striped.table-bordered.cart-detail
      %thead
        %tr
          %th.span2 Order Number
          %th.span3 Date Ordered
          %th.span2 Order Total
          %th.span2 Status
          %th.span3 Change Status To:
      %tbody
        - @orders.each do |order|
          %tr
            %td
              = link_to order.id, store_admin_order_path(order.store, order)
            %td= (order.created_at).to_date.strftime("%B %-d, %Y")
            %td= number_to_currency(order.total_price)
            %td= order.current_status
            %td
              - if order.current_status == "pending"
                = link_to "Cancel", store_admin_order_path(order.store, order), :method => :put
              - elsif order.current_status == "shipped"
                = link_to "Mark as returned", store_admin_order_path(order.store, order), :method => :put
              - elsif order.current_status == "paid"
                = link_to "Mark as shipped", store_admin_order_path(order.store, order), :method => :put
              - else
                = "N/A"
